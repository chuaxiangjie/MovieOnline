using Orleans.Runtime;
using Orleans;
using System.Threading.Tasks;
using System.Threading;
using Movies.Server.JsonReader;
using Movies.Contracts;
using System.Collections.Generic;

namespace Movies.Server
{
	public sealed class DataSeedingStartupTask(IGrainFactory grainFactory) : IStartupTask
	{
		public async Task Execute(CancellationToken cancellationToken)
		{
			var movieReader = new MovieReader();
			var movies = await movieReader.ReadAsync();

			var createMovieTasks = new List<Task>();
			var movieLibraryGrain = grainFactory.GetGrain<IMovieLibraryGrain>(0);

			foreach (var movie in movies)
			{
				movie.Id = 0;

				createMovieTasks.Add(movieLibraryGrain.AddMovieAsync(movie, assignAutoGeneratedId: true));
			}

			await Task.WhenAll(createMovieTasks);
		}

		//public async Task Execute(CancellationToken cancellationToken)
		//{
		//	var movieReader = new MovieReader();
		//	var movies = await movieReader.ReadAsync();

		//	var createMovieTasks = new List<Task>();

		//	foreach (var movie in movies)
		//	{
		//		movie.Id = 0;

		//		var movieGrain = grainFactory.GetGrain<IMovieGrain>(movie.Key);
		//		createMovieTasks.Add(movieGrain.CreateAsync(movie, assignAutoGeneratedId: true));
		//	}

		//	await Task.WhenAll(createMovieTasks);
		//}
	}
}